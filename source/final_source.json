{
  "$schema": "https://vega.github.io/schema/vega/v3.json",
  "width": 900,
  "height": 1400,
  "padding": 5,
  "autosize": "pad",

  "signals": [
    {"name": "numRows", "update": "length(data('summarized-data'))"},
    {"name": "rowHeight", "value": 14},
    {"name": "header", "value": 40, "comment": "Space left for table header"},
    {"name": "height", "update": "rowHeight * numRows + header"},
    {"name": "yHeaderLine1", "value": 10},
    {"name": "yHeaderLine2", "value": 22},
    {"name": "yHeaderLine3", "value": 30},
    {"name": "fontSizeHeaderLine1", "value": 14},
    {"name": "fontSizeHeaderLine2", "value": 10},
    {"name": "fontSizeHeaderLine3", "value": 10},
    {"name": "fillHeaderLine1", "value": "#000"},
    {"name": "fillHeaderLine2", "value": "#000"},
    {"name": "fillHeaderLine3", "value": "#666"},
    {"name": "fontSizeRows", "value": 11},
    {"name": "dyRows", "value": 9},
    {"name": "width1", "value": 600, "comment": "Total width for all numeric columns"},
    {"name": "alignColumnSet1", "value": "right"},
    {"name": "alignColumnSet2", "value": "left"},
    {"name": "offsetColumnSet1", "value": 100},
    {"name": "offsetColumnSet2", "value": 10},
    {"name": "offsetTriangleDownSet1", "update": "(offsetColumnSet1 - 3)"},
    {"name": "offsetTriangleDownSet2", "update": "(offsetColumnSet2 + 13)"},
    {"name": "offsetTriangleUpSet1", "update": "(offsetTriangleDownSet1 - 8)", "comment": "Distance between down arrow and up arrow"},
    {"name": "offsetTriangleUpSet2", "update": "(offsetTriangleDownSet2 - 8)", "comment": "Distance between down arrow and up arrow"},
    {"name": "offsetHideZeroText", "update": "(offsetTriangleDownSet1 - 22)", "comment": "Distance between down arrow and Hide 0 text"},
    {"name": "offsetHideZeroRect", "update": "(offsetHideZeroText - 35)", "comment": "Distance between Hide 0 text and checkbox"},
    {"name": "fillTriangleNoSort", "value": "#ccc"},
    {"name": "fillTriangleSort", "value": "#444"},
    {"name": "sizeTriangle", "value" : 80},
    {"name": "sizeHideZeroRect", "value" : 80},
    {"name": "shapeMarkUnchecked", "value": "M-1,-1 h2 v2 h-2 v-2", "comment": "svg path for square without check mark"},
    {"name": "shapeMarkChecked", "value": "M-1,-1 h2 v2 h-2 v-2 M -0.7,0 l 0.4,0.7 l 0.9,-1.4", "comment": "svg path for square with check mark"},
    {"name": "colorOddRow", "value": "#F5F5F5"},
    {"name": "colorEvenRow", "value": "#FFF"},
    {"name": "colorNonEmptyQueue", "value": "#130CD5", "comment": "admin wanted the currently non-empty queue to show in a different color"},
    {"name": "colorEmptyQueue", "value": "#000"},
    {
      "name": "signalSortColumn", "value": "DepthNow",
      "on": [
        {"events": "@triangleUpSet1:mousedown", "update": "group().datum.columnKey"},
        {"events": "@triangleDownSet1:mousedown", "update": "group().datum.columnKey"},
        {"events": "@triangleUpSet2:mousedown", "update": "group().datum.columnKey"},
        {"events": "@triangleDownSet2:mousedown", "update": "group().datum.columnKey"}
      ],
      "comment": "Indicates the column the user has clicked for sorting"
    },
    {
      "name": "signalSortOrder", "value": "descending",
      "on": [
        {"events": "@triangleUpSet1:mousedown", "update": "'ascending'"},
        {"events": "@triangleDownSet1:mousedown", "update": "'descending'"},
        {"events": "@triangleUpSet2:mousedown", "update": "'ascending'"},
        {"events": "@triangleDownSet2:mousedown", "update": "'descending'"}
      ],
      "comment": "Indicates whether the user wants ascending or descending sorting"
    },
    {
      "name": "signalHideZeroColumn", "value": null,
      "on": [
        {"events": "@HideZeroRect:mousedown", "update": "group().datum"},
        {"events": "window:mouseup", "update": "null"}
      ],
      "comment": "Indicates the column whose Hide 0 checkbox has been most recently clicked "
    }
  ],

  "data": [
    {
      "name": "columnSet1",
      "values": [
        {"columnKey": "MaxDepth", "headerLine1": "Max Messages", "headerLine2": "(in last 24 HR)"},
        {"columnKey": "Depth30Min", "headerLine1": "Messages", "headerLine2": "(30 Min ago)"},
        {"columnKey": "Depth15Min", "headerLine1": "Messages", "headerLine2": "(15 Min ago)"},
        {"columnKey": "Depth5Min", "headerLine1": "Messages", "headerLine2": "(5 Min ago)"},
        {"columnKey": "DepthNow", "headerLine1": "Messages", "headerLine2": "(Now)"},
        {"columnKey": "Consumers", "headerLine1": "Consumers", "headerLine2": "(Now)"}
      ],
      "transform": [
        {"type": "formula", "as": "hzChecked", "expr": "isObject(datum.hzChecked) ? datum.hzChecked : false"},
        {"type": "formula", "as": "hzChecked", "expr": "signalHideZeroColumn === datum ? !datum.hzChecked : datum.hzChecked"}
      ]
    },
    {
      "name": "columnSet2",
      "values": [
        {"columnKey": "FQQN", "headerLine1": "Queue", "headerLine2": ""}
      ]
    },
    {
      "name": "hideZeroColumns",
      "values": [
        {"keyMax": "MaxDepth", "key30": "Depth30Min", "key15": "Depth15Min", "key5": "Depth5Min", "keyNow": "DepthNow", "keyConsumers": "Consumers"}
      ],
      "transform": [
        {"type": "lookup", "from": "columnSet1", "key": "columnKey", "fields": ["keyMax"],"as": ["hzMax"]},
        {"type": "lookup", "from": "columnSet1", "key": "columnKey", "fields": ["key30"],"as": ["hz30"]},
        {"type": "lookup", "from": "columnSet1", "key": "columnKey", "fields": ["key15"],"as": ["hz15"]},
        {"type": "lookup", "from": "columnSet1", "key": "columnKey", "fields": ["key5"],"as": ["hz5"]},
        {"type": "lookup", "from": "columnSet1", "key": "columnKey", "fields": ["keyNow"],"as": ["hzNow"]},
        {"type": "lookup", "from": "columnSet1", "key": "columnKey", "fields": ["keyConsumers"],"as": ["hzConsumers"]},
        {
          "type": "project",
          "fields": ["hzMax.hzChecked", "hz30.hzChecked", "hz15.hzChecked", "hz5.hzChecked", "hzNow.hzChecked", "hzConsumers.hzChecked"],
          "as": ["hzMaxChecked", "hz30Checked", "hz15Checked", "hz5Checked", "hzNowChecked", "hzConsumersChecked"]
        }
      ]
    },
    {
      "name": "mqdata-last-30-min-sorted",
      "url": "https://gist.githubusercontent.com/paragdeuskar/2ba94d610054ec6d222b6157d4adc96b/raw/ef8a5d3e9ce810c3e3e5ad955b7847ab3bb708a2/mq_depth_gist_data_30min.json",
      "format": {"property": "hits.hits"},
      "transform": [
        {"type": "formula", "as": "SysTime", "expr": "timeParse(datum._source.SysTime, '%Y-%m-%dT%H:%M:%S%Z')"},
        {"type": "formula", "as": "when", "expr": "datum.matched_queries[0]"},
        {
          "type": "project",
          "fields": ["SysTime", "_source.Queue", "_source.Consumers", "_source.Depth", "_source.System", "_source.FQQN", "when"],
          "as": ["SysTime", "Queue", "Consumers", "Depth", "System", "FQQN", "when"]
        },
        {
          "type": "collect", "sort": {"field": ["FQQN", "SysTime"]}
        }
      ]
    },
    {
      "name": "depth-now", "source": "mqdata-last-30-min-sorted",
      "transform": [
        {"type": "filter", "expr": "datum.when === 'Now'"},
        {
          "type": "window",
          "sort": {"field": "FQQN"},
          "ops": ["last_value", "last_value"],
          "fields": ["Depth", "SysTime"],
          "as": ["Depth", "SysTimeLast"]
        },
        {"type": "filter", "expr": "datum.SysTime === datum.SysTimeLast"}
      ]
    },
    {
      "name": "depth-5min-ago", "source": "mqdata-last-30-min-sorted",
      "transform": [
        {"type": "filter", "expr": "datum.when === '5MinAgo'"},
        {
          "type": "window",
          "sort": {"field": "FQQN"},
          "ops": ["last_value", "last_value"],
          "fields": ["Depth", "SysTime"],
          "as": ["Depth", "SysTimeLast"]
        },
        {"type": "filter", "expr": "datum.SysTime === datum.SysTimeLast"}
      ]
    },
    {
      "name": "depth-15min-ago", "source": "mqdata-last-30-min-sorted",
      "transform": [
        {"type": "filter", "expr": "datum.when === '15MinAgo'"},
        {
          "type": "window",
          "sort": {"field": "FQQN"},
          "ops": ["last_value", "last_value"],
          "fields": ["Depth", "SysTime"],
          "as": ["Depth", "SysTimeLast"]
        },
        {"type": "filter", "expr": "datum.SysTime === datum.SysTimeLast"}
      ]
    },
    {
      "name": "depth-30min-ago", "source": "mqdata-last-30-min-sorted",
      "transform": [
        {"type": "filter", "expr": "datum.when === '30MinAgo'"},
        {
          "type": "window",
          "sort": {"field": "FQQN"},
          "ops": ["last_value", "last_value"],
          "fields": ["Depth", "SysTime"],
          "as": ["Depth", "SysTimeLast"]
        },
        {"type": "filter", "expr": "datum.SysTime === datum.SysTimeLast"}
      ]
    },
    {
      "name": "maxdepth-24H",
      "url": "https://gist.githubusercontent.com/paragdeuskar/7279d1532efd9d7be9c4fb3d052312ca/raw/39580dd15afa5139af26a5c917954771dee74e47/mq_depth_gist_data_maxdepth.json",
      "format": {"property": "aggregations.queues.buckets"},
      "transform": [
        {"type": "project", "fields": ["key", "MaxDepth.value"], "as": ["FQQN", "MaxDepth"] },
        {"type": "formula", "as": "Queue", "expr": "substring(datum.FQQN,4)"},
        {"type": "formula", "as": "System", "expr": "substring(datum.FQQN,0,3)"},
        {"type": "collect", "sort": {"field": "FQQN"}}
      ]
    },
    {
      "name": "summarized-data", "source": "maxdepth-24H",
      "transform": [
        {"type": "lookup", "from": "depth-now", "key": "FQQN", "fields": ["FQQN"], "values": ["Depth","Consumers"], "as": ["DepthNow","Consumers"]},
        {"type": "lookup", "from": "depth-5min-ago", "key": "FQQN", "fields": ["FQQN"], "values": ["Depth"], "as": ["Depth5Min"]},
        {"type": "lookup", "from": "depth-15min-ago", "key": "FQQN", "fields": ["FQQN"], "values": ["Depth"], "as": ["Depth15Min"]},
        {"type": "lookup", "from": "depth-30min-ago", "key": "FQQN", "fields": ["FQQN"], "values": ["Depth"], "as": ["Depth30Min"]},
        {"type": "formula", "as": "sortField", "expr": "signalSortColumn === 'FQQN' ? datum.FQQN : datum.sortField"},
        {"type": "formula", "as": "sortField", "expr": "signalSortColumn === 'MaxDepth' ? datum.MaxDepth : datum.sortField"},
        {"type": "formula", "as": "sortField", "expr": "signalSortColumn === 'Depth30Min' ? datum.Depth30Min : datum.sortField"},
        {"type": "formula", "as": "sortField", "expr": "signalSortColumn === 'Depth15Min' ? datum.Depth15Min : datum.sortField"},
        {"type": "formula", "as": "sortField", "expr": "signalSortColumn === 'Depth5Min' ? datum.Depth5Min : datum.sortField"},
        {"type": "formula", "as": "sortField", "expr": "signalSortColumn === 'DepthNow' ? datum.DepthNow : datum.sortField"},
        {"type": "formula", "as": "sortField", "expr": "signalSortColumn === 'Consumers' ? datum.Consumers : datum.sortField"},
        {"type": "filter", "expr": "!data('hideZeroColumns')[0].hzMaxChecked || datum.MaxDepth > 0"},
        {"type": "filter", "expr": "!data('hideZeroColumns')[0].hz30Checked || datum.Depth30Min > 0"},
        {"type": "filter", "expr": "!data('hideZeroColumns')[0].hz15Checked || datum.Depth15Min > 0"},
        {"type": "filter", "expr": "!data('hideZeroColumns')[0].hz5Checked || datum.Depth5Min > 0"},
        {"type": "filter", "expr": "!data('hideZeroColumns')[0].hzNowChecked || datum.DepthNow > 0"},
        {"type": "filter", "expr": "!data('hideZeroColumns')[0].hzConsumersChecked || datum.Consumers > 0"},
        {
          "type": "window", "sort": {"field": ["sortField", "FQQN"], "order": [{"signal": "signalSortOrder"}, "ascending"]},
          "ops": ["row_number"], "as": ["RowNum"]
        },
        {"type": "formula", "as": "Odd", "expr": "datum.RowNum % 2 ? true : false"}
      ]
    }
  ],
  
  "scales": [
    {
      "name": "xscaleSet1", "type": "band",
      "domain": {"data": "columnSet1", "field": "columnKey"},
      "range": [10, {"signal": "width1-10"}]
    },
    {
      "name": "xscaleSet2", "type": "band",
      "domain": {"data": "columnSet2", "field": "columnKey"},
      "range": [{"signal": "width1"}, {"signal": "width-10"}]
    },
    {
      "name": "yscale", "type": "band",
      "domain": {"data": "summarized-data", "field": "RowNum", "sort": true},
      "range": [{"signal": "header"}, {"signal": "height"}]
    }
  ],
  
  "marks": [
    {
      "type": "group",
      "from": {"data": "columnSet1"},
      "marks": [
        {
          "type": "text",
          "encode": {
            "enter": {
              "align": {"signal": "alignColumnSet1"},
              "fill": {"signal": "fillHeaderLine1"},
              "font": {"value": "Helvetica"},
              "fontSize": {"signal": "fontSizeHeaderLine1"},
              "text": {"field": {"parent": "headerLine1"}}
            },
            "update": {
              "x": {"scale": "xscaleSet1", "field": {"parent": "columnKey"}, "offset": {"signal": "offsetColumnSet1"}},
              "y": {"signal": "yHeaderLine1"}
            }
          }
        },
        {
          "type": "text",
          "encode": {
            "enter": {
              "align": {"signal": "alignColumnSet1"},
              "fill": {"signal": "fillHeaderLine2"},
              "font": {"value": "Helvetica"},
              "fontSize": {"signal": "fontSizeHeaderLine2"},
              "text": {"field": {"parent": "headerLine2"}}
            },
            "update": {
              "x": {"scale": "xscaleSet1", "field": {"parent": "columnKey"}, "offset": {"signal": "offsetColumnSet1"}},
              "y": {"signal": "yHeaderLine2"}
            }
          }
        },
        {
          "type": "symbol",
          "name": "triangleDownSet1",
          "encode": {
            "enter": {
              "shape": {"value": "triangle-down"},
              "size": {"signal": "sizeTriangle"}
            },
            "update": {
              "x": {"scale": "xscaleSet1", "field": {"parent": "columnKey"}, "offset": {"signal": "offsetTriangleDownSet1"}},
              "y": {"signal": "yHeaderLine3"},
              "fill": [
                {"test": "parent.columnKey === signalSortColumn && 'descending' === signalSortOrder", "signal": "fillTriangleSort"},
                {"signal": "fillTriangleNoSort"}
              ]
            }
          }
        },
        {
          "type": "symbol",
          "name": "triangleUpSet1",
          "encode": {
            "enter": {
              "shape": {"value": "triangle-up"},
              "size": {"signal": "sizeTriangle"}
            },
            "update": {
              "x": {"scale": "xscaleSet1", "field": {"parent": "columnKey"}, "offset": {"signal": "offsetTriangleUpSet1"}},
              "y": {"signal": "yHeaderLine3"},
              "fill": [
                {"test": "parent.columnKey === signalSortColumn && 'ascending' === signalSortOrder", "signal": "fillTriangleSort"},
                {"signal": "fillTriangleNoSort"}
              ]
            }
          }
        },
        {
          "type": "symbol",
          "name": "HideZeroRect",
          "encode": {
            "enter": {
              "size": {"signal": "sizeTriangle"},
              "strokeWidth": {"value": 1},
              "stroke": {"signal": "fillTriangleSort"},
              "fill": {"value": "white"}
            },
            "update": {
              "x": {"scale": "xscaleSet1", "field": {"parent": "columnKey"}, "offset": {"signal": "offsetHideZeroRect"}},
              "y": {"signal": "yHeaderLine3"},
              "shape": [
                {"test": "parent.hzChecked", "signal": "shapeMarkChecked"},
                {"signal": "shapeMarkUnchecked"}
              ]
            }
          }
        },
        {
          "type": "text",
          "name": "hideZeroText",
          "encode": {
            "enter": {
              "baseline": {"value": "middle"},
              "align": {"signal": "alignColumnSet1"},
              "fill": {"signal": "fillHeaderLine3"},
              "font": {"value": "Helvetica"},
              "fontSize": {"signal": "fontSizeHeaderLine3"},
              "text": {"value": "Hide 0"}
            },
            "update": {
              "x": {"scale": "xscaleSet1", "field": {"parent": "columnKey"}, "offset": {"signal": "offsetHideZeroText"}},
              "y": {"signal": "yHeaderLine3"}
            }
          }
        }
      ]
    },
    {
      "type": "group",
      "from": {"data": "columnSet2"},
      "marks": [
        {
          "type": "text",
          "encode": {
            "enter": {
              "align": {"signal": "alignColumnSet2"},
              "fill": {"signal": "fillHeaderLine1"},
              "font": {"value": "Helvetica"},
              "fontSize": {"signal": "fontSizeHeaderLine1"},
              "text": {"field": {"parent": "headerLine1"}}
            },
            "update": {
              "x": {"scale": "xscaleSet2", "field": {"parent": "columnKey"}, "offset": {"signal": "offsetColumnSet2"}},
              "y": {"signal": "yHeaderLine1"}
            }
          }
        },
        {
          "type": "text",
          "encode": {
            "enter": {
              "align": {"signal": "alignColumnSet2"},
              "fill": {"signal": "fillHeaderLine2"},
              "font": {"value": "Helvetica"},
              "fontSize": {"signal": "fontSizeHeaderLine2"},
              "text": {"field": {"parent": "headerLine2"}}
            },
            "update": {
              "x": {"scale": "xscaleSet2", "field": {"parent": "columnKey"}, "offset": {"signal": "offsetColumnSet2"}},
              "y": {"signal": "yHeaderLine2"}
            }
          }
        },
        {
          "type": "symbol",
          "name": "triangleDownSet2",
          "encode": {
            "enter": {
              "shape": {"value": "triangle-down"},
              "size": {"signal": "sizeHideZeroRect"}
            },
            "update": {
              "x": {"scale": "xscaleSet2", "field": {"parent": "columnKey"}, "offset": {"signal": "offsetTriangleDownSet2"}},
              "y": {"signal": "yHeaderLine3"},
              "fill": [
                {"test": "parent.columnKey === signalSortColumn && 'descending' === signalSortOrder", "signal": "fillTriangleSort"},
                {"signal": "fillTriangleNoSort"}
              ]
            }
          }
        },
        {
          "type": "symbol",
          "name": "triangleUpSet2",
          "encode": {
            "enter": {
              "shape": {"value": "triangle-up"},
              "size": {"signal": "sizeTriangle"}
            },
            "update": {
              "x": {"scale": "xscaleSet2", "field": {"parent": "columnKey"}, "offset": {"signal": "offsetTriangleUpSet2"}},
              "y": {"signal": "yHeaderLine3"},
              "fill": [
                {"test": "parent.columnKey === signalSortColumn && 'ascending' === signalSortOrder", "signal": "fillTriangleSort"},
                {"signal": "fillTriangleNoSort"}
              ]
            }
          }
        }
      ]
    },
    {
      "type": "group",
      "from": {"data": "summarized-data"},
      "marks": [
        {
          "type": "rect",
          "encode": {
            "enter": {
              "height": {"scale": "yscale", "band": 1},
              "fillOpacity": {"value": 1}
            },
            "update": {
              "x": {"value": 0},
              "x2": {"signal": "width-10"},
              "y": {"scale": "yscale", "field": {"parent": "RowNum"}, "offset": -1},
              "fill": [
                {"test": "parent.Odd", "signal": "colorOddRow"},
                {"signal": "colorEvenRow"}
              ]
            }
          }
        },
        {
          "type": "text",
          "from": {"data": "columnSet1"},
          "encode": {
            "enter": {
              "dy": {"signal": "dyRows"},
              "align": {"signal": "alignColumnSet1"},
              "fill": {"value": "#000"},
              "font": {"value": "Helvetica"},
              "fontSize": {"value": 10}
            },
            "update": {
              "x": {"scale": "xscaleSet1", "field": "columnKey", "offset": {"signal": "offsetColumnSet1"}},
              "y": {"scale": "yscale", "field": {"parent": "RowNum"}},
              "text": {"field": {"parent": {"datum": "columnKey"}}}
            }
          }
        },
        {
          "type": "text",
          "from": {"data": "columnSet2"},
          "encode": {
            "enter": {
              "dy": {"signal": "dyRows"},
              "align": {"signal": "alignColumnSet2"},
              "font": {"value": "Helvetica"},
              "fontSize": {"signal": "fontSizeRows"}
            },
            "update": {
              "x": {"scale": "xscaleSet2", "field": "columnKey", "offset": {"signal": "offsetColumnSet2"}},
              "y": {"scale": "yscale", "field": {"parent": "RowNum"}},
              "text": {"field": {"parent": {"datum": "columnKey"}}},
              "fill": [
                {"test": "parent.DepthNow > 0", "signal": "colorNonEmptyQueue"},
                {"signal": "colorEmptyQueue"}
              ]
            }
          }
        }
      ]
    }
  ]
}

